# All configurations possible for sniper

[general]
arch = intel
mode = 64 
magic = false # Allow ROI to be set by a script, and ignore Roi{Begin, End} magic instructions
inst_mode_init = cache_only
inst_mode_roi = detailed
inst_mode_end = detailed
inst_mode_output = true
syntax = intel #Disassembly syntax (intel, att, or xed)
issue_memops_at_functional = false # Issue memory operations to the memory hierarchy as they are executed functionally 
num_host_core = 0 # Number of host cores to use (approx) -1 = no limits, 0 = autodetction based on availabilty
enable_signals = false
enable_smc_support = false # Supports self modifying code 
enable_pinplay = false # Run with a pinball instead of an application
enable_syscall_emulation = true # Emulate system calls, cpuid, rdtsc, etc. 
suppress_stdout = false # Suppress the application's output to stdout
suppress_stderr = false # Suppress the application's output to stderr 

# Total number of cores in the simulation
total_cores = 2
enable_icache_modeling = true

[perf_model/core]
logical_cpus = 1 # number of SMT threads per core 
type = rob
core_model = nehalem
frequency = 1

[perf_model/core/interval_timer]
issue_contention = true 
dispatch_width = 4 
window_size = 128
num_outstanding_loadstores = 10

[perf_model/core/rob_timer]
address_disambiguation = true
commit_width = 4 
in_order = false
issue_contention = true 
issue_memops_at_issue = false
mlp_histogram = false
outstanding_loads = 72
outstanding_stores = 42
rob_repartition = true
rs_entries = 192
store_to_load_forwarding = true

[perf_model/sync] 
reschedule_cost = 1000 

[caching_protocol] 
type = parametric_dram_directory_msi
variant = mesi

[perf_model/branch_predictor]
type = pentium_m
mispredict_penalty = 8 

[perf_model/tlb]
penalty = 30 		# Page walk penalty in cycles 

[perf_model/itlb]
size = 128		# Number of I-TLB entries
associativity = 4 	# I-TLB associativity

[perf_model/dtlb]
size = 64		# Number of D-TLB entries
associativity = 4 	# D-TLB associativity

[perf_model/stlb]
size = 512		# Number of second-level TLB entries 
associativity = 4	# S-TLB associativity 

[perf_model/cache]
levels = 3

[perf_model/l1_icache]
perfect = false
cache_size = 32 
cache_block_size = 64
associativity = 8
address_hash = mask
replacement_policy = lru
data_access_time = 6
tags_access_time = 1
perf_model_type = parallel
writethrough = 0
shared_cores = 1

[perf_model/l1_dcache]
perfect = false
cache_size = 32
assoiciativity = 8
cache_block_size = 64
address_hash = mask
replacement_policy = lru 
data_access_time = 6
tags_access_time = 1
perf_model_type = parallel
writethrough = 0
shared_cores = 1

[perf_model/l2_cache]
perfect = false
cache_size = 256
cache_block_size = 64
assoiciativity = 8
address_hash = mask
replacement_policy = lru
data_access_time = 12
tags_access_time = 1
# Total neighbor L1/L2 access time is around 40/70 ctcles 60-70 if it's coming out of L1
perf_model_type = parallel
writethrough = 0
shared_cores = 1

[perf_model/l3_cache]
perfect = false 
cache_size = 2560 
cache_block_size = 64
associativity = 20 
dvfs_domain = global 
prefetcher = none
address_hash = mask 
replacement_policy = lru 
data_access_time = 71 # from real world data http://www.realworldtech.com/page.cfm?ArticleID=RWT040208182719&p=7
tags_access_time = 30
writeback_time = 71
perf_model_type = parallel
writethrough = 0
shared_cores = 1	# Original was in 12, but switching to 1 for 2 core system. 

[perf_model/nuca]
enabled = true 
cached_size = 2560 	# in KB
associativity = 20
address_hash = mask 
replacement_policy = lru 
tags_access_time = 3 	# In cycles 
data_access_time = 71 	# In cycles, parallel with tag access
bandwidth = 64 		# In GB/s 

[perf_model/nuca/queue_model]
enabled = true 
type = history_list

# NUCA cache slices are colocated with the tag directories, make sure that those are in each network tile
[perf_model/dram_directory]
locations = llc

[perf_model/dram_directory] 
total_entries = 16384
associativity = 16
max_hw_shareres = 64
directory_type = full_map
home_lookup_param = 6
directory_cache_access_time = 10 
locations = dram 
interleaving = 1

[perf_mode/dram_directory/limitless]
software_trap_penalty = 200 # number of cycles aded to clock when trapping into software

[perf_model/dram]
type = constant
latency = 100			#in ns 
per_controller_bandwidth = 17.4	#in GB/s
num_controllers = -1
controllers_interleaving = 12
controller_positions = ""
direct_access = false

[perf_model/dram/normal]
standard_deviation = 0		# in ns

[pref_model/dram/cache]
enabled = false 

[perf_model/dram/queue_model]
enabled = true
type = history_list 

[network] 
# 1) magic 
# 2) emesh_hop_counter, emesh_hop_by_hop
# 3) bus
memory_model_1 = emesh_hop_counter
system_model = magic 
collect_traffic_matrix = false

[network/emesh_hop_counter]
link_bandwidth = 64 # bits/cycle
hop_latency = 13

[network/emesh_hop_by_hop] 



 






